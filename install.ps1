# Script de instalaci√≥n autom√°tica para el Sistema de Ferreter√≠a

Write-Host "üè™ Instalador del Sistema de Ferreter√≠a" -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Blue

# Verificar si Node.js est√° instalado
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js versi√≥n: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js no est√° instalado." -ForegroundColor Red
    Write-Host "Por favor, desc√°rgalo desde: https://nodejs.org" -ForegroundColor Yellow
    Write-Host "Se recomienda la versi√≥n LTS (Long Term Support)" -ForegroundColor Yellow
    Read-Host "Presiona Enter para continuar despu√©s de instalar Node.js"
    exit 1
}

# Verificar si npm est√° disponible
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm versi√≥n: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm no est√° disponible" -ForegroundColor Red
    exit 1
}

# Obtener directorio del proyecto
$projectRoot = Split-Path $MyInvocation.MyCommand.Path
Set-Location $projectRoot

Write-Host "üìÅ Directorio del proyecto: $projectRoot" -ForegroundColor Cyan

Write-Host "`nüîß Iniciando instalaci√≥n..." -ForegroundColor Yellow

# Instalar dependencias del Backend
Write-Host "`nüì° Instalando dependencias del Backend..." -ForegroundColor Blue
$backendPath = Join-Path $projectRoot "backend"

if (Test-Path $backendPath) {
    Set-Location $backendPath
    Write-Host "üì¶ Ejecutando npm install en backend..." -ForegroundColor Cyan
    
    try {
        npm install
        Write-Host "‚úÖ Backend: Dependencias instaladas correctamente" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Error instalando dependencias del backend" -ForegroundColor Red
        Write-Host "Error: $_" -ForegroundColor Red
        Read-Host "Presiona Enter para continuar"
    }
} else {
    Write-Host "‚ùå No se encontr√≥ la carpeta backend" -ForegroundColor Red
}

# Instalar dependencias del Frontend
Write-Host "`n‚öõÔ∏è  Instalando dependencias del Frontend..." -ForegroundColor Blue
$frontendPath = Join-Path $projectRoot "frontend"

if (Test-Path $frontendPath) {
    Set-Location $frontendPath
    Write-Host "üì¶ Ejecutando npm install en frontend..." -ForegroundColor Cyan
    
    try {
        npm install
        Write-Host "‚úÖ Frontend: Dependencias instaladas correctamente" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Error instalando dependencias del frontend" -ForegroundColor Red
        Write-Host "Error: $_" -ForegroundColor Red
        Read-Host "Presiona Enter para continuar"
    }
} else {
    Write-Host "‚ùå No se encontr√≥ la carpeta frontend" -ForegroundColor Red
}

# Regresar al directorio ra√≠z
Set-Location $projectRoot

Write-Host "`n" + "=" * 50 -ForegroundColor Blue
Write-Host "üéâ ¬°INSTALACI√ìN COMPLETADA!" -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Blue

Write-Host "`nüìã PR√ìXIMOS PASOS:" -ForegroundColor Yellow

Write-Host "`n1Ô∏è‚É£  CONFIGURAR BASE DE DATOS (Opcional):" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ MongoDB Local: Se conectar√° autom√°ticamente" -ForegroundColor White
Write-Host "   ‚Ä¢ MongoDB Atlas: Edita backend/.env con tu URI" -ForegroundColor White

Write-Host "`n2Ô∏è‚É£  POBLAR CON DATOS DE PRUEBA:" -ForegroundColor Cyan
Write-Host "   cd backend" -ForegroundColor Gray
Write-Host "   npm run seed" -ForegroundColor Gray

Write-Host "`n3Ô∏è‚É£  INICIAR EL SISTEMA:" -ForegroundColor Cyan
Write-Host "   Opci√≥n A (Autom√°tico): ./start.ps1" -ForegroundColor Gray
Write-Host "   Opci√≥n B (Manual):" -ForegroundColor Gray
Write-Host "     Terminal 1: cd backend && npm run dev" -ForegroundColor Gray
Write-Host "     Terminal 2: cd frontend && npm start" -ForegroundColor Gray

Write-Host "`nüîê CREDENCIALES DE PRUEBA:" -ForegroundColor Yellow
Write-Host "Usuario Admin:    admin / admin123" -ForegroundColor White
Write-Host "Usuario Empleado: empleado1 / empleado123" -ForegroundColor White
Write-Host "Usuario Cajero:   cajero1 / cajero123" -ForegroundColor White

Write-Host "`nüåê URLS DEL SISTEMA:" -ForegroundColor Yellow
Write-Host "Frontend: http://localhost:3001" -ForegroundColor Cyan
Write-Host "Backend:  http://localhost:3000" -ForegroundColor Cyan

Write-Host "`nüí° CONSEJOS √öTILES:" -ForegroundColor Yellow
Write-Host "‚Ä¢ Mant√©n MongoDB corriendo para usar la base de datos local" -ForegroundColor White
Write-Host "‚Ä¢ El sistema funciona sin MongoDB (usar√° memoria temporal)" -ForegroundColor White
Write-Host "‚Ä¢ Revisa el archivo README.md para m√°s informaci√≥n" -ForegroundColor White
Write-Host "‚Ä¢ Los puertos 3000 y 3001 deben estar libres" -ForegroundColor White

Write-Host "`nüöÄ ¬øQuieres iniciar el sistema ahora? (s/n): " -ForegroundColor Green -NoNewline
$response = Read-Host

if ($response -eq "s" -or $response -eq "S" -or $response -eq "si" -or $response -eq "s√≠") {
    Write-Host "`nüéØ Iniciando sistema..." -ForegroundColor Green
    & .\start.ps1
} else {
    Write-Host "`n‚úÖ Instalaci√≥n completada. Para iniciar m√°s tarde, ejecuta:" -ForegroundColor Green
    Write-Host "./start.ps1" -ForegroundColor Cyan
    Write-Host "`nPresiona cualquier tecla para salir..." -ForegroundColor Gray
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
}